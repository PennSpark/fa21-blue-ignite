{"ast":null,"code":"var _jsxFileName = \"/Users/homer/ignite/src/CanvasLayout.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"./css/react-grid-layout-style.css\";\nimport \"./css/react-resizable-style.css\";\nimport NavBar from \"./Components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n_c = ResponsiveReactGridLayout;\n\nfunction generateLayout() {\n  return _.map(_.range(0, 41), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: _.random(0, 5) * 2 % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString() //static: Math.random() < 0.05,\n\n    };\n  });\n}\n\nexport default class CanvasLayout extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: {\n        lg: this.props.initialLayout\n      },\n      block: {\n        lg: []\n      }\n    };\n\n    this.onBreakpointChange = breakpoint => {\n      this.setState(prevState => ({\n        currentBreakpoint: breakpoint,\n        block: { ...prevState.block,\n          [breakpoint]: prevState.block[breakpoint] || prevState.block[prevState.currentBreakpoint] || []\n        }\n      }));\n    };\n\n    this.onTakeItem = item => {\n      this.setState(prevState => ({\n        block: { ...prevState.block,\n          [prevState.currentBreakpoint]: prevState.block[prevState.currentBreakpoint].filter(_ref => {\n            let {\n              i\n            } = _ref;\n            return i !== item.i;\n          })\n        },\n        layouts: { ...prevState.layouts,\n          [prevState.currentBreakpoint]: [...prevState.layouts[prevState.currentBreakpoint], item]\n        }\n      }));\n    };\n\n    this.onPutItem = item => {\n      this.setState(prevState => {\n        return {\n          block: { ...prevState.block,\n            [prevState.currentBreakpoint]: [...(prevState.block[prevState.currentBreakpoint] || []), item]\n          },\n          layouts: { ...prevState.layouts,\n            [prevState.currentBreakpoint]: prevState.layouts[prevState.currentBreakpoint].filter(_ref2 => {\n              let {\n                i\n              } = _ref2;\n              return i !== item.i;\n            })\n          }\n        };\n      });\n    };\n\n    this.onLayoutChange = (layout, layouts) => {\n      this.props.onLayoutChange(layout, layouts);\n      this.setState({\n        layouts\n      });\n    };\n\n    this.onNewLayout = () => {\n      this.setState({\n        layouts: {\n          lg: generateLayout()\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts[this.state.currentBreakpoint], l => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hide-button\",\n          onClick: this.onPutItem.bind(this, l),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text\",\n          children: l.i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this)]\n      }, l.i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        onNewLayout: this.onNewLayout,\n        onTakeItem: this.onTakeItem,\n        items: this.state.block[this.state.currentBreakpoint] || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveReactGridLayout, { ...this.props,\n        layouts: this.state.layouts,\n        onBreakpointChange: this.onBreakpointChange,\n        onLayoutChange: this.onLayoutChange // WidthProvider option\n        ,\n        measureBeforeMount: false // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        ,\n        useCSSTransforms: this.state.mounted,\n        compactType: this.state.compactType,\n        preventCollision: !this.state.compactType,\n        children: this.generateDOM()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCanvasLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function () {},\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 1,\n    xxs: 2\n  },\n  initialLayout: generateLayout()\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveReactGridLayout\");","map":{"version":3,"sources":["/Users/homer/ignite/src/CanvasLayout.js"],"names":["React","_","Responsive","WidthProvider","NavBar","ResponsiveReactGridLayout","generateLayout","map","range","item","i","y","Math","ceil","random","x","floor","w","h","toString","CanvasLayout","Component","state","currentBreakpoint","compactType","mounted","layouts","lg","props","initialLayout","block","onBreakpointChange","breakpoint","setState","prevState","onTakeItem","filter","onPutItem","onLayoutChange","layout","onNewLayout","componentDidMount","generateDOM","l","bind","render","defaultProps","className","rowHeight","cols","md","sm","xs","xxs"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"./css/react-grid-layout-style.css\";\nimport \"./css/react-resizable-style.css\";\nimport NavBar from \"./Components/NavBar\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nfunction generateLayout() {\n  return _.map(_.range(0, 41), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: (_.random(0, 5) * 2) % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      //static: Math.random() < 0.05,\n    };\n  });\n}\n\nexport default class CanvasLayout extends React.Component {\n  static defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function () {},\n    cols: { lg: 12, md: 10, sm: 6, xs: 1, xxs: 2 },\n    initialLayout: generateLayout(),\n  };\n\n  state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: { lg: this.props.initialLayout },\n    block: { lg: [] },\n  };\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts[this.state.currentBreakpoint], (l) => {\n      return (\n        <div key={l.i}>\n          <div className=\"hide-button\" onClick={this.onPutItem.bind(this, l)}>\n            &times;\n          </div>\n          {<span className=\"text\">{l.i}</span>}\n        </div>\n      );\n    });\n  }\n\n  onBreakpointChange = (breakpoint) => {\n    this.setState((prevState) => ({\n      currentBreakpoint: breakpoint,\n      block: {\n        ...prevState.block,\n        [breakpoint]:\n          prevState.block[breakpoint] ||\n          prevState.block[prevState.currentBreakpoint] ||\n          [],\n      },\n    }));\n  };\n\n  onTakeItem = (item) => {\n    this.setState((prevState) => ({\n      block: {\n        ...prevState.block,\n        [prevState.currentBreakpoint]: prevState.block[\n          prevState.currentBreakpoint\n        ].filter(({ i }) => i !== item.i),\n      },\n      layouts: {\n        ...prevState.layouts,\n        [prevState.currentBreakpoint]: [\n          ...prevState.layouts[prevState.currentBreakpoint],\n          item,\n        ],\n      },\n    }));\n  };\n\n  onPutItem = (item) => {\n    this.setState((prevState) => {\n      return {\n        block: {\n          ...prevState.block,\n          [prevState.currentBreakpoint]: [\n            ...(prevState.block[prevState.currentBreakpoint] || []),\n            item,\n          ],\n        },\n        layouts: {\n          ...prevState.layouts,\n          [prevState.currentBreakpoint]: prevState.layouts[\n            prevState.currentBreakpoint\n          ].filter(({ i }) => i !== item.i),\n        },\n      };\n    });\n  };\n\n  onLayoutChange = (layout, layouts) => {\n    this.props.onLayoutChange(layout, layouts);\n    this.setState({ layouts });\n  };\n\n  onNewLayout = () => {\n    this.setState({\n      layouts: { lg: generateLayout() },\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          onNewLayout={this.onNewLayout}\n          onTakeItem={this.onTakeItem}\n          items={this.state.block[this.state.currentBreakpoint] || []}\n        />\n\n        <ResponsiveReactGridLayout\n          {...this.props}\n          layouts={this.state.layouts}\n          onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={this.onLayoutChange}\n          // WidthProvider option\n          measureBeforeMount={false}\n          // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n          // and set `measureBeforeMount={true}`.\n          useCSSTransforms={this.state.mounted}\n          compactType={this.state.compactType}\n          preventCollision={!this.state.compactType}\n        >\n          {this.generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}