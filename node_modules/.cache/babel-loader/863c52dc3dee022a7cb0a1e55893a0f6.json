{"ast":null,"code":"var _jsxFileName = \"/Users/homer/ignite/src/test-hook.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"style-loader!css-loader!./css/styles.css\";\nimport \"style-loader!css-loader!./examples/example-styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\n\nexport default function makeLayout(Layout) {\n  // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\n  // It does not pass any other props to the Layout.\n  class ListeningLayout extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        layout: []\n      };\n\n      this.onLayoutChange = layout => {\n        this.setState({\n          layout: layout\n        });\n      };\n    }\n\n    stringifyLayout() {\n      return this.state.layout.map(function (l) {\n        const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"layoutItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), `: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`]\n        }, l.i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"layoutJSON\",\n            children: [\"Displayed as \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"[x, y, w, h]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 28\n            }, this), \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"columns\",\n              children: this.stringifyLayout()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Layout, {\n            onLayoutChange: this.onLayoutChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n\n  function run() {\n    const contentDiv = document.getElementById(\"content\");\n    const gridProps = window.gridProps || {};\n    ReactDOM.render( /*#__PURE__*/React.createElement(ListeningLayout, gridProps), contentDiv);\n  }\n\n  if (!document.getElementById(\"content\")) {\n    document.addEventListener(\"DOMContentLoaded\", run);\n  } else {\n    run();\n  }\n\n  return ListeningLayout;\n}","map":{"version":3,"sources":["/Users/homer/ignite/src/test-hook.jsx"],"names":["React","ReactDOM","window","makeLayout","Layout","ListeningLayout","Component","state","layout","onLayoutChange","setState","stringifyLayout","map","l","name","i","x","y","w","h","render","run","contentDiv","document","getElementById","gridProps","createElement","addEventListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,0CAAP;AACA,OAAO,uDAAP;;AACA,OAAOC,MAAP,KAAkB,WAAlB,KAAkCA,MAAM,CAACF,KAAP,GAAeA,KAAjD,E,CAAyD;;AAEzD,eAAe,SAASG,UAAT,CAAoBC,MAApB,EAA4B;AACzC;AACA;AACA,QAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAAA;AAAA;AAAA,WAC5CC,KAD4C,GACpC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADoC;;AAAA,WAG5CC,cAH4C,GAG3BD,MAAM,IAAI;AACzB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAEA;AAAV,SAAd;AACD,OAL2C;AAAA;;AAO5CG,IAAAA,eAAe,GAAG;AAChB,aAAO,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,GAAlB,CAAsB,UAAUC,CAAV,EAAa;AACxC,cAAMC,IAAI,GAAGD,CAAC,CAACE,CAAF,KAAQ,mBAAR,GAA8B,MAA9B,GAAuCF,CAAC,CAACE,CAAtD;AACA,4BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAEI,MAAKD,CAAC,CAACG,CAAE,KAAIH,CAAC,CAACI,CAAE,KAAIJ,CAAC,CAACK,CAAE,KAAIL,CAAC,CAACM,CAAE,GAFrC;AAAA,WAAiCN,CAAC,CAACE,CAAnC;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OARM,CAAP;AASD;;AAEDK,IAAAA,MAAM,GAAG;AACP,0BACE,QAAC,KAAD,CAAO,UAAP;AAAA,+BACE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,qDACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADf,oBAEE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,wBAA0B,KAAKT,eAAL;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,MAAD;AAAQ,YAAA,cAAc,EAAE,KAAKF;AAA7B;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;AA/B2C;;AAkC9C,WAASY,GAAT,GAAe;AACb,UAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnB;AACA,UAAMC,SAAS,GAAGvB,MAAM,CAACuB,SAAP,IAAoB,EAAtC;AACAxB,IAAAA,QAAQ,CAACmB,MAAT,eACEpB,KAAK,CAAC0B,aAAN,CAAoBrB,eAApB,EAAqCoB,SAArC,CADF,EAEEH,UAFF;AAID;;AACD,MAAI,CAACC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAL,EAAyC;AACvCD,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,kBAA1B,EAA8CN,GAA9C;AACD,GAFD,MAEO;AACLA,IAAAA,GAAG;AACJ;;AAED,SAAOhB,eAAP;AACD","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"style-loader!css-loader!./css/styles.css\";\nimport \"style-loader!css-loader!./examples/example-styles.css\";\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\n\nexport default function makeLayout(Layout) {\n  // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\n  // It does not pass any other props to the Layout.\n  class ListeningLayout extends React.Component {\n    state = { layout: [] };\n\n    onLayoutChange = layout => {\n      this.setState({ layout: layout });\n    };\n\n    stringifyLayout() {\n      return this.state.layout.map(function (l) {\n        const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\n        return (\n          <div className=\"layoutItem\" key={l.i}>\n            <b>{name}</b>\n            {`: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`}\n          </div>\n        );\n      });\n    }\n\n    render() {\n      return (\n        <React.StrictMode>\n          <div>\n            <div className=\"layoutJSON\">\n              Displayed as <code>[x, y, w, h]</code>:\n              <div className=\"columns\">{this.stringifyLayout()}</div>\n            </div>\n            <Layout onLayoutChange={this.onLayoutChange} />\n          </div>\n        </React.StrictMode>\n      );\n    }\n  }\n\n  function run() {\n    const contentDiv = document.getElementById(\"content\");\n    const gridProps = window.gridProps || {};\n    ReactDOM.render(\n      React.createElement(ListeningLayout, gridProps),\n      contentDiv\n    );\n  }\n  if (!document.getElementById(\"content\")) {\n    document.addEventListener(\"DOMContentLoaded\", run);\n  } else {\n    run();\n  }\n\n  return ListeningLayout;\n}"]},"metadata":{},"sourceType":"module"}